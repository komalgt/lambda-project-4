{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lambda Project Documentation Welcome to the documentation for the Lambda Project! This project contains: - AWS Lambda functions written in Python. - Code for running, testing, and deploying serverless workloads. Project Structure src/ \u2013 Source code for Lambda functions. tests/ \u2013 Test scripts. docs/ \u2013 This documentation. Getting Started Clone the repository. Install required Python packages. Follow the API section for usage instructions.","title":"Lambda Project Documentation"},{"location":"#lambda-project-documentation","text":"Welcome to the documentation for the Lambda Project! This project contains: - AWS Lambda functions written in Python. - Code for running, testing, and deploying serverless workloads.","title":"Lambda Project Documentation"},{"location":"#project-structure","text":"src/ \u2013 Source code for Lambda functions. tests/ \u2013 Test scripts. docs/ \u2013 This documentation.","title":"Project Structure"},{"location":"#getting-started","text":"Clone the repository. Install required Python packages. Follow the API section for usage instructions.","title":"Getting Started"},{"location":"api/","text":"API Reference This section documents the core AWS Lambda function(s) of the project. Lambda Function: handler ```python Code Generated by Sidekick is for learning and experimentation purposes only. def handler(event, context): \"\"\" Main Lambda function handler. Parameters: - event: dict, contains event data - context: LambdaContext, contains runtime information Returns: - dict: API response \"\"\" # Your business logic here return {'statusCode': 200, 'body': 'Hello from Lambda!'}","title":"API Reference"},{"location":"api/#api-reference","text":"This section documents the core AWS Lambda function(s) of the project.","title":"API Reference"},{"location":"api/#lambda-function-handler","text":"```python","title":"Lambda Function: handler"},{"location":"api/#code-generated-by-sidekick-is-for-learning-and-experimentation-purposes-only","text":"def handler(event, context): \"\"\" Main Lambda function handler. Parameters: - event: dict, contains event data - context: LambdaContext, contains runtime information Returns: - dict: API response \"\"\" # Your business logic here return {'statusCode': 200, 'body': 'Hello from Lambda!'}","title":"Code Generated by Sidekick is for learning and experimentation purposes only."}]}